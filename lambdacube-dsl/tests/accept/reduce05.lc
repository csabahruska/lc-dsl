data AB = A | B

render fb choice = let
  rasterCtx         = TriangleCtx CullNone PolygonFill NoOffset LastVertex
  mask              = case choice of
                        A -> V4B False True False False
                        B -> V4B True False False False
  fragmentCtx       = AccumulationContext (ColorOp NoBlending mask)
  vertexShader v    = VertexOut v 1.0 () (Smooth v)
  vertexStream      = Fetch "stream4" Triangles (IV4F "position4")
  primitiveStream   = Transform vertexShader vertexStream
  fragmentStream    = Rasterize rasterCtx primitiveStream
  fragmentShader v  = let res = case choice of
                            A -> V4F 0.0 1.0 0.0 1.0
                            B -> V4F 1.0 0.0 0.0 1.0
                      in FragmentOut res
  frame             = Accumulate fragmentCtx PassAll fragmentShader fragmentStream fb
 in frame

emptyFB = FrameBuffer (colorImage1 (V4F 0.0 0.0 1.0 1.0))

main = ScreenOut (foldl' render emptyFB [A,B])
