Pipeline {backend = OpenGL33, textures = [], samplers = [], targets = [RenderTarget {renderTargets = [(Color,Just (Framebuffer Color))]}], programs = [Program {programUniforms = fromList [], programStreams = fromList [("v",("position4",V4F))], programInTextures = fromList [], programOutput = [("f0",V4F)], vertexShader = "#version 330 core\nin vec4 v ;\nsmooth out vec4 v0 ;\nvoid main() {\nv0 = v;\ngl_Position = v;\ngl_PointSize = 1.0;\n}\n", geometryShader = Nothing, fragmentShader = "#version 330 core\nsmooth in vec4 v0 ;\nout vec4 f0 ;\nvoid main() {\nf0 = vec4 ( 1.0,0.0,0.0,1.0 );\n}\n"},Program {programUniforms = fromList [], programStreams = fromList [("v",("position4",V4F))], programInTextures = fromList [], programOutput = [("f0",V4F)], vertexShader = "#version 330 core\nin vec4 v ;\nsmooth out vec4 v0 ;\nvoid main() {\nv0 = v;\ngl_Position = v;\ngl_PointSize = 1.0;\n}\n", geometryShader = Nothing, fragmentShader = "#version 330 core\nsmooth in vec4 v0 ;\nout vec4 f0 ;\nvoid main() {\nf0 = vec4 ( 0.0,1.0,0.0,1.0 );\n}\n"}], slots = [Slot {slotName = "stream4", slotUniforms = fromList [], slotStreams = fromList [("position4",V4F)], slotPrimitive = Triangles, slotPrograms = [0,1]}], commands = [SetRenderTarget 0,ClearRenderTarget [(Color,VV4F (V4 0.0 0.0 1.0 1.0))],SetRasterContext (TriangleCtx CullNone PolygonFill NoOffset LastVertex),SetAccumulationContext (AccumulationContext {accViewportName = Nothing, accOperations = [ColorOp NoBlending (VV4B (V4 False True False False))]}),SetProgram 1,RenderSlot 0,SetRasterContext (TriangleCtx CullNone PolygonFill NoOffset LastVertex),SetAccumulationContext (AccumulationContext {accViewportName = Nothing, accOperations = [ColorOp NoBlending (VV4B (V4 True False False False))]}),SetProgram 0,RenderSlot 0]}